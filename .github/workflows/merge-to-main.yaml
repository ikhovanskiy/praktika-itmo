name: Merge to main
run-name: ${{ github.actor }} merge to main ðŸš€
on:
  push:
    branches:
      - "main"
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Read .nvmrc
        run: |
          echo 'NVM_VERSION<<EOF' >> $GITHUB_ENV
          cat .nvmrc>> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
        id: nvm
      - name: Use Node.js ${{ env.NVM_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NVM_VERSION }}
      - run: npm i
      - name: check lint
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Read .nvmrc
        run: |
          echo 'NVM_VERSION<<EOF' >> $GITHUB_ENV
          cat .nvmrc>> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
        id: nvm
      - name: Use Node.js ${{ env.NVM_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NVM_VERSION }}
      - run: npm i
      - name: testing...
        run: npm run test
  build:
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Read .nvmrc
        run: |
          echo 'NVM_VERSION<<EOF' >> $GITHUB_ENV
          cat .nvmrc>> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
        id: nvm
      - name: Use Node.js ${{ env.NVM_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NVM_VERSION }}
      - run: npm i
      - name: building...
        run: npm run build
  docker:
    runs-on: ubuntu-latest
    env:
      CR_REGISTRY: crp21olp4qc3qsmd15s8
      CR_REPOSITORY: praktika-itmo-testing
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Login to Yandex Cloud Container Registry
        id: login-cr
        uses: yc-actions/yc-cr-login@v2
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
      - name: Build, tag, and push image to Yandex Cloud Container Registry
        run: |
          docker build -f ./deploy/Dockerfile -t cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG .
          docker build -f ./deploy/Dockerfile -t cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:latest .
          docker push cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG
          docker push cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:latest
      - name: Deploy Serverless Container
        id: deploy-sls-container
        uses: yc-actions/yc-sls-container-deploy@v2
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
          container-name: itmo-praktika-testing
          folder-id: b1gv25ei0r6tsb29hlal
          revision-service-account-id: ${{ secrets.SERVICE_ACCOUNT_ID }}
          revision-image-url: cr.yandex/{{ env.CR_REGISTRY }}/{{ env.CR_REPOSITORY }}:latest
